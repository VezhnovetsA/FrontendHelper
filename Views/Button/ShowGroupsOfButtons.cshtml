@model IEnumerable<FrontendHelper.Models.ButtonGroupViewModel>
@using FhEnums
@inject FrontendHelper.Services.AuthService authService

@{
    ViewData["Title"] = "Группы кнопок";
}

<h2 class="mb-4">Группы кнопок</h2>

@* Кнопка «Все кнопки» *@
<div class="mb-4">
    <a class="btn btn-sm btn-outline-primary btn-view-all"
       asp-action="ShowAllButtons"
       asp-controller="Button">
        ← Все кнопки
    </a>
</div>

@if (authService.HasPermission(Permission.CanManageButtons))
{
    <a class="btn-create-icon mb-3"
       asp-controller="Button"
       asp-action="CreateButton">
        <i class="bi bi-plus-lg"></i> Создать кнопку
    </a>
}

@foreach (var group in Model)
{
    <div class="mb-5">
        <div class="d-flex justify-content-between align-items-center mb-3">
            <h3 class="text-capitalize mb-0">@group.Topic</h3>
            <a class="btn btn-sm btn-outline-primary btn-view-all"
               asp-action="ShowAllButtonsOnTheTopic"
               asp-controller="Button"
               asp-route-topic="@group.Topic">
                Смотреть все →
            </a>
        </div>

        <div class="row gx-3 gy-4">
            @foreach (var btn in group.Buttons)
            {
                <div class="col-sm-6 col-md-4 col-lg-3">
                    <div class="card h-100 shadow-sm position-relative">

                        @* 1) Превью: iframe сверху, закруглённые углы + отступы *@
                        <div style="height: 100px;
                                    display: flex;
                                    align-items: center;
                                    justify-content: flex-start;    /* прижато к левому краю */
                                    background: var(--bg-alt);
                                    padding: 0.5rem;
                                    border-top-left-radius: 12px;
                                    border-top-right-radius: 12px;
                                    overflow: hidden;">
                            <iframe src="@Url.Content($"~/buttons/{btn.ButtonCode}")"
                                    style="border: none;
                                           width: auto;
                                           height: 100%;
                                           max-width: 100%;"
                                    scrolling="no">
                            </iframe>
                        </div>

                        @* 2) Тело карточки: при клике — открывается модалка; внизу «Скачать код» *@
                        <div class="card-body d-flex flex-column"
                             style="cursor: pointer;"
                             data-button-id="@btn.Id"
                             data-button-name="@btn.Name"
                             data-button-topic="@btn.Topic"
                             data-button-file="@btn.ButtonCode">

                            <h5 class="card-title text-truncate"
                                title="@btn.Name"
                                style="font-size:1.1rem;">
                                @btn.Name
                            </h5>
                            <p class="card-text text-muted small mb-2">Категория: @btn.Topic</p>

                            <div class="mt-auto d-flex justify-content-start">
                                <button class="btn btn-sm btn-outline-primary"
                                        onclick="event.stopPropagation(); downloadCode('@Url.Action("DownloadCode","Button", new { id = btn.Id })')">
                                    Скачать код
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
}

@* Тот же модал «buttonDetailModal», без класса modal-lg *@
<div class="modal fade" id="buttonDetailModal" tabindex="-1" aria-labelledby="buttonDetailModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="buttonDetailModalLabel">Детали кнопки</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Закрыть"></button>
            </div>
            <div class="modal-body text-center">
                @* Preview: iframe высотой 200px *@
                <div id="modalButtonPreview"
                     class="mb-3"
                     style="width:100%;
                            height:200px;
                            display:flex;
                            align-items:center;
                            justify-content:flex-start;  /* прижато к левому краю */
                            background: var(--bg-alt);
                            border-top-left-radius: 12px;
                            border-top-right-radius: 12px;
                            overflow:hidden;">
                    <!-- JS вставит сюда <iframe src="/buttons/{ButtonCode}"> -->
                </div>
                <h5 id="modalButtonName" class="mb-1"></h5>
                <p id="modalButtonTopic" class="text-muted small mb-3"></p>
            </div>
            <div class="modal-footer justify-content-center">
                <button id="modalDownloadBtn" class="btn btn-outline-primary me-2">
                    <i class="bi bi-download"></i> Скачать код
                </button>
                @if (authService.HasPermission(Permission.CanManageButtons))
                {
                    <button id="modalEditBtn" class="btn btn-outline-secondary me-2">
                        <i class="bi bi-pencil"></i> Редактировать
                    </button>
                    <button id="modalDeleteBtn" class="btn"
                            style="background: linear-gradient(90deg, #E64A19, #D84315);
                                   color: #FFF;
                                   border: none;
                                   padding: 0.5rem 1rem;
                                   border-radius: 50px;
                                   transition: transform 0.2s, box-shadow 0.2s;">
                        <i class="bi bi-trash"></i> Удалить
                    </button>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function downloadCode(url) {
            const link = document.createElement('a');
            link.href = url;
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
        }

        function openButtonModal(buttonId) {
            const triggerEl = document.querySelector(`[data-button-id='${buttonId}']`);
            if (!triggerEl) return;

            const name  = triggerEl.getAttribute('data-button-name');
            const topic = triggerEl.getAttribute('data-button-topic');
            const file  = triggerEl.getAttribute('data-button-file');
            const previewUrl = "/buttons/" + file;

            document.getElementById('modalButtonName').innerText  = name;
            document.getElementById('modalButtonTopic').innerText = "Категория: " + topic;

            const container = document.getElementById('modalButtonPreview');
            container.innerHTML = "";
            const iframe = document.createElement('iframe');
            iframe.src = previewUrl;
            iframe.style.width  = "auto";
            iframe.style.height = "100%";
            iframe.frameBorder  = "0";
            container.appendChild(iframe);

            document.getElementById('modalDownloadBtn').onclick = () => {
                downloadCode(`@Url.Action("DownloadCode", "Button")/${buttonId}`);
            };

        @if (authService.HasPermission(Permission.CanManageButtons))
        {
            <text>
                    document.getElementById('modalEditBtn').onclick = () => {
                        window.location.href = `@Url.Action("EditButton", "Button")/${buttonId}`;
                    };
                    document.getElementById('modalDeleteBtn').onclick = () => {
                        if (!confirm('Вы уверены, что хотите удалить эту кнопку?')) return;
                        const form = document.createElement('form');
                        form.method = 'post';
                        form.action = `@Url.Action("DeleteButton", "Button")`;

                        const tokenInput = document.querySelector('input[name="__RequestVerificationToken"]');
                        if (tokenInput) {
                            const hiddenToken = document.createElement('input');
                            hiddenToken.type = 'hidden';
                            hiddenToken.name = '__RequestVerificationToken';
                            hiddenToken.value = tokenInput.value;
                            form.appendChild(hiddenToken);
                        }

                        const idInput = document.createElement('input');
                        idInput.type = 'hidden';
                        idInput.name = 'id';
                        idInput.value = buttonId;
                        form.appendChild(idInput);

                        document.body.appendChild(form);
                        form.submit();
                    };
            </text>
        }

            const modalElement = document.getElementById('buttonDetailModal');
            const bsModal = new bootstrap.Modal(modalElement);
            bsModal.show();
        }

        document.querySelectorAll('.card-body[data-button-id]').forEach(div => {
            div.addEventListener('click', function(e) {
                if (e.target.tagName === 'BUTTON') return;
                const id = this.getAttribute('data-button-id');
                openButtonModal(id);
            });
        });
    </script>
}
