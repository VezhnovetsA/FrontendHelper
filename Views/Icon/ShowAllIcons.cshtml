@model IEnumerable<FrontendHelper.Models.IconViewModel>

@{
    ViewData["Title"] = "Все иконки";
}

<h2 class="mb-4">Все иконки</h2>

<div class="row gx-3 gy-4">
    @foreach (var icon in Model)
    {
        <div class="col-sm-6 col-md-4 col-lg-3">
            <div class="card h-100 shadow-sm position-relative">
                <img src="@Url.Content($"~/images/icons/{icon.Img}")"
                     alt="@icon.Name"
                     class="card-img-top img-fluid"
                     style="object-fit: contain; max-height: 200px; width: 100%; background: var(--bg-alt); padding: 0.5rem;" />
                <div class="card-body d-flex flex-column">
                    <h5 class="card-title text-truncate" title="@icon.Name" style="font-size: 1.1rem;">@icon.Name</h5>
                    <p class="card-text text-muted small mb-2">Тема: @icon.Topic</p>
                    <div class="mt-auto d-flex justify-content-between align-items-center">
                        <button class="btn btn-sm btn-outline-primary"
                                onclick="downloadIcon('@Url.Content($"~/images/icons/{icon.Img}")')">
                            Скачать
                        </button>
                        <button class="btn btn-sm btn-outline-secondary"
                                onclick="copyImageToClipboard('@Url.Content($"~/images/icons/{icon.Img}")')">
                            Копировать
                        </button>
                    </div>
                </div>
                @* Сердечко «в избранное» *@
                <button class="favorite-toggle-btn"
                        data‐asset‐type="Icon"
                        data‐asset‐id="@icon.Id"
                        style="position: absolute; top: 8px; right: 8px; background: none; border: none;">
                    @if (icon.IsFavorited)
                    {
                        <i class="bi bi-heart-fill text-danger" title="Убрать из избранного"></i>
                    }
                    else
                    {
                        <i class="bi bi-heart text-secondary" title="Добавить в избранное"></i>
                    }
                </button>
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        // Скачиваем изображение
        function downloadIcon(url) {
            const link = document.createElement('a');
            link.href = url;
            const fileName = url.substring(url.lastIndexOf('/') + 1);
            link.download = fileName;
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
        }

        // Копируем изображение
        async function copyImageToClipboard(url) {
            try {
                const response = await fetch(url);
                const blob = await response.blob();
                if (!navigator.clipboard) {
                    alert('Clipboard API не поддерживается этим браузером.');
                    return;
                }
                await navigator.clipboard.write([new ClipboardItem({ [blob.type]: blob })]);
                alert('Изображение скопировано');
            } catch (err) {
                alert('Не удалось скопировать изображение: ' + err);
            }
        }

        // Toggle favorite
        document.querySelectorAll('.favorite-toggle-btn').forEach(btn => {
            btn.addEventListener('click', async function () {
                const assetType = this.dataset.assetType;
                const assetId = this.dataset.assetId;
                try {
                    const response = await fetch('/Favorites/Toggle', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json', 'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val() },
                        body: JSON.stringify({ assetType: assetType, assetId: parseInt(assetId) })
                    });
                    if (!response.ok) throw new Error('Сетевая ошибка');
                    const result = await response.json();
                    const iconEl = this.querySelector('i');
                    if (result.favorited) {
                        iconEl.classList.remove('bi-heart');
                        iconEl.classList.add('bi-heart-fill', 'text-danger');
                        iconEl.title = 'Убрать из избранного';
                    } else {
                        iconEl.classList.remove('bi-heart-fill', 'text-danger');
                        iconEl.classList.add('bi-heart', 'text-secondary');
                        iconEl.title = 'Добавить в избранное';
                    }
                } catch (err) {
                    alert('Не удалось обновить избранное: ' + err);
                }
            });
        });
    </script>
}
